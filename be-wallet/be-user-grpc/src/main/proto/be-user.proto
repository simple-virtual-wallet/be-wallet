// 使用该proto文件可以定义交互的服务接口，基于该文件编译成的源文件可以分别复制到 client端和server端，便于两者使用

syntax = "proto3"; // 定义语法类型，通常proto3好于proto2，proto2好于proto1，如果不指定，默认使用proto2，必须位于第一行

package user; // 定义作用域
option java_multiple_files = false; // 表示下面的message不需要编译成多个java文件
option java_outer_classname = "UserGrpc"; // 表示下面的message编译成的java类文件的名字
option java_package = "team.simpleVirtualWallet.beUser.service.grpc"; //指定该proto文件编译成的java源文件的包名


message User {
  uint64 id = 1;
  string account = 2;
  string mail = 3;
  string phone = 4;
}

message CreateUserReq {
  string account = 1;
  string password = 2;
  string mail = 3;
  string phone = 4;
}

message CreateUserRes {
  uint32 id = 1;
}

message GetUserReq {
  oneof user {
    int32 id = 1;
    string account = 2;
    string mail = 3;
    string phone = 4;
  }
}

message GetUserRes {
  optional User user = 1;
}

message VerifyUserReq {
  string account = 1;
  string password = 2;
}

message VerifyUserRes {
  User user = 1;
}

service UserService {
  rpc CreateUser(CreateUserReq) returns (CreateUserRes);
  rpc GetUser(GetUserReq) returns (GetUserRes);
  rpc VerifyUser(VerifyUserReq) returns (VerifyUserRes);
}